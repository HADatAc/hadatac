version: '3'

services:
    # The Hadatac Solr Service
    solr:
        build:
            context: ./solr
            dockerfile: Dockerfile
        container_name: hadatac_solr
        restart: always
        environment:
            SOLR_JAVA_MEM: "-Xms1g -Xmx1g"
        # Mount a volume in the mycores directory to persist data that is ingested.
        volumes:
            - hadatac-solr:/opt/solr/server
#            - /path in host server/solr-home:/opt/solr/server/solr/mycores   # Uncomment this option to use external binding
        networks:
            hadatac:
                aliases:
                    - solr
        ports:
            - "8983:8983"

    # The Hadatac Blazegraph instance
    blazegraph:
        build:
            context: ./blazegraph
            dockerfile: Dockerfile
        container_name: hadatac_blazegraph
        networks:
            hadatac:
                aliases:
                    - blazegraph
        ports:
            - "8080:8080"
        restart: always
        environment:
            JAVA_OPTS: -Xms128m -Xmx2g
        volumes:
            - hadatac-blazegraph:/var/lib/jetty
#            - /path in host server/blazegraph/bigdata.jnl:/var/lib/jetty/bigdata.jnl # Uncomment this option to use external binding

    # The primary hadatac web app
    hadatac:
        build: ./
        restart: always
        container_name: hadatac
        tty: true
        ports:
            - "9000:9000"
        networks:
            hadatac:
                aliases:
                    - hadatac
        environment:
            # Uncomment below setting when using Solr Authentication. Then rename security.json.template under solr/solr-home/ folder to security.json. Both the changes are mandatory for Solr Authentication to work.
            # JAVA_OPTS: -Xms128m -Xmx12g -Dsolr.httpclient.builder.factory=org.apache.solr.client.solrj.impl.PreemptiveBasicAuthClientBuilderFactory -Dbasicauth=solr:SolrRocks
            # Comment out below setting when using Solr Authentication
            JAVA_OPTS: -Xms128m -Xmx12g
        volumes:
            # Creates a volume to store the various csv files. This allows the data
            #   to be persisted when the container is removed or when Hadatac is rebuilt.
            # Example command: docker cp <filename> hadatac:/root/app/csvs/unprocessed_csv

            # Comment out this option to use external binding
            - hadatac-csvs:/hadatac/csvs
            - hadatac-working_csv:/hadatac/working_csv
#            - /Users/kandws01/Documents/merge3/local:/root/app/csvs  # Uncomment this option to use external binding
            # Creates a volume for the config files. This way configuration file changes
            #   are persisted when the container is removed or rebuilt.

            # Comment out this option to use external binding
            - hadatac-conf:/hadatac/conf
#            - /path in host server/conf:/root/app/conf # Uncomment this option to use external binding
            - /var/log/hadatac:/hadatac/logs
        links:
            - blazegraph
            - solr
        depends_on:
            - blazegraph
            - solr
  
    shinyproxy:
        image: tetherlessworld/hadatac-shinyproxy:latest
        container_name: hadatac_shinyproxy
        ports:
            - 8081:8080
        environment: 
            - "WORK_DIR=${PWD}"
        networks:
            hadatac:
                aliases:
                    - shinyproxy
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "/var/log/hadatac_shinyproxy/server:/log"
            - "/var/log/hadatac_shinyproxy/container:/container-logs"
            - "./shinyproxy/application.yml:/opt/shinyproxy/application.yml"
            - "./shinyproxy/fragments:/opt/shinyproxy/fragments"

volumes:
    hadatac-solr:
    hadatac-blazegraph:
    hadatac-csvs:
    hadatac-working_csv:
    hadatac-conf:

networks:
    hadatac:
